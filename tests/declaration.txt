# vim: ft=python:
>>> from lessipy import *
>>> from lessipy.tree.declaration import *
>>> from lessipy.tree.property import *
>>> from lessipy.tree.variable import *
>>> from lessipy.tree.keyword import *
>>> from lessipy.tree.operator import *
>>> from lessipy.tree.numeric import *
>>> from lessipy.tree.color import *
>>> from lessipy.tree.expression import *
>>> from lessipy.tree.cssable import String

>>> PropertyDeclaration(
...     key=Property("text-align"),
...     value=Keyword("left")
... ).to_css()
'text-align: left;'

>>> definition = Declaration(
...     Variable("@foo"),
...     Measure(1, "px")
... ) #doctest: +SKIP
>>> definition.to_css() #doctest: +SKIP
None

>>> Declaration(
...     Property("font-size"),
...     Addition(
...         Measure(Numeric(1), "px"),
...         Measure(Numeric(2), "px")
...     )
... ).to_css()
'font-size: 3.0px;'

>>> Declaration(
...     Property("font-size"),
...     Addition(
...         Addition(
...             Measure(Numeric(1), "px"),
...             Measure(2, "px")
...         ),
...         Addition(
...             Measure(1, "px"),
...             Measure(2, "px")
...         )
...     )
... ).to_css()
'font-size: 6.0px;'

>>> Declaration(
...     Property("font-size"),
...     Addition(
...         Addition(
...             Addition(
...                 Addition(
...                     Measure(Numeric(1), "px"),
...                     Measure(2, "px")
...                 ),
...                 Measure(Numeric(1), "px"),
...             ),
...             Addition(
...                 Measure(Numeric(1), "px"),
...                 Measure(2, "px")
...             )
...         ),
...         Addition(
...             Measure(1, "px"),
...             Measure(2, "px")
...         )
...     )
... ).to_css()
'font-size: 10.0px;'

>>> Declaration(
...     Property("font-size"),
...     Subtraction(
...         Measure(1, "px"),
...         Numeric(2)
...     )
... ).to_css()
'font-size: -1.0px;'

>>> Declaration(
...     Property("font-size"),
...     Subtraction(
...         Numeric(2),
...         Measure(1, "px")
...     )
... ).to_css()
'font-size: 1.0px;'

>>> Declaration(
...     Property("font-size"),
...     Subtraction(
...         Measure(2, "em"),
...         Measure(1, "px")
...     )
... ).to_css() #doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ArithmeticError: ...

>>> Declaration(
...     Property("left"),
...     Variable("@foo")
... ).to_css() #doctest: +SKIP
Traceback ...
UndefinedVariableError: ...

>>> Declaration(
...     Property("left"),
...     Variable("@foo"),
...     context=definition.context
... ).to_css() #doctest: +SKIP
'left: 1.0px;'

>>> Declaration(
...     Property("color"),
...     Multiply(
...         Color("#ff0"),
...         Numeric(0.5),
...     ),
... ).to_css()
'color: rgb(127, 127, 0);'

>>> Declaration(
...     Property("color"),
...     Addition(
...         Multiply(
...             Color("#ff0"),
...             Numeric(0.5),
...         ),
...         Color((123, 45, 2)).to_hex()
...     )
... ).to_css()
'color: rgb(250, 172, 2);'

>>> Declaration(
...     Property("line-height"),
...     Multiply(
...         Measure(2, "px"),
...         Numeric(0.5)
...     )
... ).to_css()
'line-height: 1.0px;'

>>> Declaration(
...     Property("line-height"),
...     Multiply(
...         Measure(0.5, "em"),
...         Color((123, 23, 0))
...     )
... ).to_css() #doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ArithmeticError: ...

>>> Declaration(
...     Property("line-height"),
...     Multiply(
...         Measure(0.5, "em"),
...         Measure(2, "px")
...     )
... ).to_css() #doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
ArithmeticError: ...

>>> Declaration(
...     Property("line-height"),
...     Multiply(
...         Measure(2, "px"),
...         Measure(50, "%")
...     )
... ).to_css()
'line-height: 1.0px;'

>>> Declaration(
...     Property("content"),
...     Expression(
...         String(" ("),
...         Keyword("attr(href)"),
...         String(")")
...     )
... ).to_css()
'content: " (" attr(href) ")";'

>>> Declaration(
...     Property("border"),
...     Expression(
...         Measure(1, "px"),
...         Keyword("solid"),
...         Color("#00f")
...     )
... ).to_css()
'border: 1px solid #0000FF;'

